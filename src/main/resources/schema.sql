CREATE TABLE IF NOT EXISTS ratings (
                                       rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
                                     film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name varchar NOT NULL,
                                     description varchar(200) NOT NULL,
                                     release_date date,
                                     duration INTEGER NOT NULL,
                                     rating_id INTEGER REFERENCES ratings,
                                     CONSTRAINT positive_duration CHECK (duration > 0),
                                     CONSTRAINT description_not_blank CHECK (TRIM(description) <> ''),
                                     CONSTRAINT min_release_date CHECK (release_date >= '1895-12-28')
);

CREATE TABLE IF NOT EXISTS genres (
                                      genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
                                           id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           film_id INTEGER REFERENCES films,
                                           genre_id INTEGER REFERENCES genres,
                                           CONSTRAINT unique_film_genre UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
                                     user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     email varchar NOT NULL UNIQUE,
                                     login varchar NOT NULL,
                                     name varchar,
                                     birthday date,
                                     CONSTRAINT email_not_blank CHECK (TRIM(email) <> ''),
                                     CONSTRAINT login_not_blank CHECK (TRIM(login) <> ''),
                                     CONSTRAINT login_no_whitespace CHECK (login NOT LIKE '% %')
);

CREATE TABLE IF NOT EXISTS film_likes (
                                          id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          film_id INTEGER REFERENCES films,
                                          user_id INTEGER REFERENCES users,
                                          CONSTRAINT unique_user_like UNIQUE (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friendships (
                                           id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           user_id INTEGER REFERENCES users,
                                           friend_id INTEGER REFERENCES users,
                                           status bool,
                                           CONSTRAINT no_self_friendship CHECK (user_id <> friend_id)
);

CREATE TABLE IF NOT EXISTS reviews (
                                    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    content VARCHAR(200) NOT NULL,
                                    is_positive BOOLEAN NOT NULL,
                                    user_id INTEGER NOT NULL REFERENCES users(user_id),
                                    film_id INTEGER NOT NULL REFERENCES films(film_id),
                                    useful INTEGER DEFAULT 0,
                                    CONSTRAINT content_not_blank CHECK (TRIM(content) <> '')
);

CREATE TABLE IF NOT EXISTS review_likes (
                                    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    review_id INTEGER NOT NULL REFERENCES reviews(review_id),
                                    user_id INTEGER NOT NULL REFERENCES users(user_id),
                                    is_like BOOLEAN NOT NULL,
                                    CONSTRAINT unique_user_review UNIQUE (review_id, user_id)
);
CREATE TABLE IF NOT EXISTS directors (
                                         director_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         name VARCHAR(255) NOT NULL
    );
CREATE TABLE IF NOT EXISTS film_directors (
                                              film_id BIGINT NOT NULL,
                                              director_id BIGINT NOT NULL,
                                              CONSTRAINT fk_film FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE,
    CONSTRAINT fk_director FOREIGN KEY (director_id) REFERENCES directors(director_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
    );
